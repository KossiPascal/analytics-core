CREATE OR REPLACE FUNCTION build_promotional_json(
    theme_label TEXT,
    theme_column TEXT,  -- e.g. 'is_maternel_childhealth_domain'
    reco_id TEXT,
    month TEXT,
    year INT
)
RETURNS JSONB
LANGUAGE plpgsql
AS $$
DECLARE
    result JSONB;
BEGIN
    EXECUTE format($f$
        SELECT jsonb_build_object(
            'label', %L,
            'vad', jsonb_build_object(
                'F', COALESCE(SUM(CASE WHEN %I IS TRUE AND is_vad_method IS TRUE AND women_number IS NOT NULL THEN women_number ELSE 0 END), 0)::BIGINT,
                'M', COALESCE(SUM(CASE WHEN %I IS TRUE AND is_vad_method IS TRUE AND men_number IS NOT NULL THEN men_number ELSE 0 END), 0)::BIGINT
            ),
            'talk', jsonb_build_object(
                'F', COALESCE(SUM(CASE WHEN %I IS TRUE AND is_talk_method IS TRUE AND women_number IS NOT NULL THEN women_number ELSE 0 END), 0)::BIGINT,
                'M', COALESCE(SUM(CASE WHEN %I IS TRUE AND is_talk_method IS TRUE AND men_number IS NOT NULL THEN men_number ELSE 0 END), 0)::BIGINT
            ),
            'personal', jsonb_build_object(
                'F', COALESCE(SUM(CASE WHEN %I IS TRUE AND is_interpersonal_talk_method IS TRUE AND women_number IS NOT NULL THEN women_number ELSE 0 END), 0)::BIGINT,
                'M', COALESCE(SUM(CASE WHEN %I IS TRUE AND is_interpersonal_talk_method IS TRUE AND men_number IS NOT NULL THEN men_number ELSE 0 END), 0)::BIGINT
            )
        )
        FROM promotional_data_view
        WHERE reco_id = %L AND month = %L AND year = %L
    $f$,
        -- Substitutions dans l'ordre :
        theme_label,
        -- vad
        theme_column, theme_column,
        -- talk
        theme_column, theme_column,
        -- personal
        theme_column, theme_column,
        -- filters
        reco_id, month, year
    )
    INTO result;

    RETURN result;
END;
$$;
