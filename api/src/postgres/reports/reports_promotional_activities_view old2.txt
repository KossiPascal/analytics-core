CREATE MATERIALIZED VIEW IF NOT EXISTS reports_promotional_activities_view AS
    WITH aggregate_method AS (
        SELECT
            reco_id,
            month,
            year,
            activity_domains AS domains,
            activity_themes AS themes,
            CASE 
                WHEN is_vad_method THEN 'vad'
                WHEN is_talk_method THEN 'talk'
                WHEN is_interpersonal_talk_method THEN 'personal'
            END AS method,
            'F' AS sex,
            women_number AS value
        FROM promotional_data_view
        WHERE women_number IS NOT NULL AND (is_vad_method OR is_talk_method OR is_interpersonal_talk_method)

        UNION ALL

        SELECT
            reco_id,
            month,
            year,
            activity_domains AS domains,
            activity_themes AS themes,
            CASE 
                WHEN is_vad_method THEN 'vad'
                WHEN is_talk_method THEN 'talk'
                WHEN is_interpersonal_talk_method THEN 'personal'
            END AS method,
            'M' AS sex,
            men_number AS value
        FROM promotional_data_view
        WHERE men_number IS NOT NULL AND (is_vad_method OR is_talk_method OR is_interpersonal_talk_method)
    ),

    filtered_method AS (
        SELECT
            reco_id,
            month,
            year,
            domains,
            themes,
            method,
            sex,
            SUM(CASE WHEN value > 0 THEN value ELSE 0 END) AS total
        FROM aggregate_method
        WHERE domains IS NOT NULL AND themes IS NOT NULL AND method IS NOT NULL
        GROUP BY reco_id, month, year, domains, themes, method, sex
    ),

    domains_config AS (
        SELECT * FROM (VALUES
                ('maternel_childhealth', 'sante mère/nouveau-né/enfant', 'domains'),
                ('education', 'Education', 'domains'),
                ('gbv', 'Violences basées sur le genre', 'domains'),
                ('nutrition', 'Nutrition', 'domains'),
                ('water_hygiene', 'Eau-hygiène et assainissemen', 'domains'),
                ('ist_vih', 'Lutte contre la maladie', 'domains'),
                ('disease_control', 'Lutte contre la maladie', 'domains'),
                ('others', 'Autre Domaine', 'domains'),

                ('prenatal_consultation', 'Consultation prénatale', 'themes'),
                ('birth_attended', 'Accouchement assisté par un personnel qualifié', 'themes'),
                ('delivery', 'Accouchement', 'themes'),
                ('birth_registration', 'Enrégistrement d''enfant', 'themes'),
                ('post_natal', 'Suivi post natal', 'themes'),
                ('post_abortion', 'Soins après avortement', 'themes'),
                ('obstetric_fistula', 'Fistule obstétricale', 'themes'),
                ('family_planning', 'Planification familiale (PF)', 'themes'),
                ('oral_contraceptive', 'Contraceptifs oraux', 'themes'),
                ('vaccination', 'Vaccination', 'themes'),
                ('newborn_care_home', 'Prise en charge du nouveau-né à domicile', 'themes'),
                ('care_home_illness_case', 'Prise en charge intégrée des cas de maladies à domicile', 'themes'),
                ('child_development_care', 'Soins pour le développement de l’enfant', 'themes'),
                ('advice_for_child_development', 'Maltraitance des enfants', 'themes'),
                ('child_abuse', 'Conseils à la famille sur les problèmes en matière de soins pour le développement de l’enfant', 'themes'),
                ('female_genital_mutilation', 'Mutilation Genitale Feminine MGF et le rejet de filles non excise', 'themes'),
                ('exclusive_breastfeeding', 'Allaitement maternel exclusif', 'themes'),
                ('vitamin_a_supp', 'Supplémentation en vitamine A', 'themes'),
                ('suppl_feeding', 'Alimentation de complément', 'themes'),
                ('malnutrition', 'Malnutrition', 'themes'),
                ('combating_iodine', 'Lutte contre la carence en iode', 'themes'),
                ('hand_washing', 'Lavage des mains', 'themes'),
                ('community_led', 'Assainissement total piloté par la communauté (ATPCtpc)', 'themes'),
                ('tuberculosis', 'Tuberculose', 'themes'),
                ('leprosy', 'Lèpre', 'themes'),
                ('buruli_ulcer', 'Ulcère de Buruli', 'themes'),
                ('onchocerciasis', 'Onchocercose', 'themes'),
                ('bilharzia', 'Bilharziose ou schistosomiase', 'themes'),
                ('mass_deworming', 'Déparasitage de masse', 'themes'),
                ('human_african_trypanosomiasis', 'Trypanosomiase humaine africaine (THA)', 'themes'),
                ('lymphatic', 'Filariose lymphatique', 'themes'),
                ('trachoma', 'Trachome', 'themes'),
                ('sti_and_hepatitis', 'IST-VIH/SIDA et les hépatites', 'themes'),
                ('hypertension', 'Hypertension artérielle', 'themes'),
                ('diabetes', 'Diabète', 'themes'),
                ('cancers', 'Cancers', 'themes'),
                ('sickle_cell_disease', 'Drépanocytose', 'themes'),
                ('malaria', 'Paludisme', 'themes'),
                ('diarrhea', 'Diarrhée simple', 'themes'),
                ('bloody_diarrhea', 'Diarrhée sanglante', 'themes'),
                ('pneumonia', 'Pneumonie', 'themes'),
                ('yellow_fever', 'Fièvre jaune', 'themes'),
                ('cholera', 'Choléra', 'themes'),
                ('tetanus', 'Tetanos', 'themes'),
                ('viral_diseases', 'Maladies Virales', 'themes'),
                ('meningitis', 'Méningite', 'themes'),
                ('pfa', 'PFA', 'themes'),
                ('urine_loss', 'Perte urinaire', 'themes'),
                ('blood_pressure', 'Pression artérielle', 'themes'),
                ('hiv', 'VIH', 'themes'),
                ('ist', 'Autres Infections Sexuellements Transtissibles', 'themes'),
                ('others', 'Autres maladies', 'domains')
            ) AS config(code, label, category)
    ),

    aggregated AS (
        SELECT 
            a.reco_id,
            a.month,
            a.year,
            cfg.code,
            cfg.label,
            cfg.category,
            f.method,
            f.sex,
            SUM(
                CASE
                    WHEN cfg.category = 'domains' AND cfg.code = ANY(f.domains) THEN f.total
                    WHEN cfg.category = 'themes' AND cfg.code = ANY(f.themes) THEN f.total
                    ELSE 0
                END
            ) AS total
        FROM year_month_reco_grid_view a
        JOIN filtered_method f 
            ON f.reco_id = a.reco_id AND f.month = a.month AND f.year = a.year
        CROSS JOIN domains_config cfg
        GROUP BY a.reco_id, a.month, a.year, cfg.code, cfg.label, cfg.category, f.method, f.sex
    ),
    
    pre_aggregated_data AS (
        SELECT 
            a.reco_id,
            a.month,
            a.year,
            e.code,
            MAX(e.label) AS label,
            SUM(CASE WHEN e.method = 'vad' AND e.sex = 'F' THEN e.total ELSE 0 END) AS vad_f,
            SUM(CASE WHEN e.method = 'vad' AND e.sex = 'M' THEN e.total ELSE 0 END) AS vad_m,
            SUM(CASE WHEN e.method = 'talk' AND e.sex = 'F' THEN e.total ELSE 0 END) AS talk_f,
            SUM(CASE WHEN e.method = 'talk' AND e.sex = 'M' THEN e.total ELSE 0 END) AS talk_m,
            SUM(CASE WHEN e.method = 'personal' AND e.sex = 'F' THEN e.total ELSE 0 END) AS personal_f,
            SUM(CASE WHEN e.method = 'personal' AND e.sex = 'M' THEN e.total ELSE 0 END) AS personal_m
        FROM year_month_reco_grid_view a
        JOIN aggregated e ON e.reco_id = a.reco_id AND e.month = a.month AND e.year = a.year
        GROUP BY a.reco_id, a.month, a.year, e.code
    )

    SELECT 
        CONCAT(a.month, '-', a.year, '-', a.reco_id) AS id,
        a.month,
        a.year,
        a.reco_id,

        jsonb_object_agg(p.code, jsonb_build_object(
            'label', p.label,
            'vad', jsonb_build_object('F', p.vad_f, 'M', p.vad_m),
            'talk', jsonb_build_object('F', p.talk_f, 'M', p.talk_m),
            'personal', jsonb_build_object('F', p.personal_f, 'M', p.personal_m)
        )) AS promotional_data,

        -- Géographie
        jsonb_build_object('id', MAX(r.id), 'name', MAX(r.name), 'phone', MAX(r.phone)) AS reco,
        jsonb_build_object('id', MAX(c.id), 'name', MAX(c.name)) AS country,
        jsonb_build_object('id', MAX(g.id), 'name', MAX(g.name)) AS region,
        jsonb_build_object('id', MAX(pf.id), 'name', MAX(pf.name)) AS prefecture,
        jsonb_build_object('id', MAX(m.id), 'name', MAX(m.name)) AS commune,
        jsonb_build_object('id', MAX(h.id), 'name', MAX(h.name)) AS hospital,
        jsonb_build_object('id', MAX(d.id), 'name', MAX(d.name)) AS district_quartier,
        jsonb_build_object('id', MAX(v.id), 'name', MAX(v.name)) AS village_secteur

    FROM year_month_reco_grid_view a
    JOIN reco_view r ON r.id = a.reco_id
    LEFT JOIN pre_aggregated_data p ON p.reco_id = a.reco_id AND p.month = a.month AND p.year = a.year

    LEFT JOIN country_view c ON r.country_id = c.id 
    LEFT JOIN region_view g ON r.region_id = g.id 
    LEFT JOIN prefecture_view pf ON r.prefecture_id = pf.id 
    LEFT JOIN commune_view m ON r.commune_id = m.id 
    LEFT JOIN hospital_view h ON r.hospital_id = h.id 
    LEFT JOIN district_quartier_view d ON r.district_quartier_id = d.id 
    LEFT JOIN village_secteur_view v ON r.village_secteur_id = v.id 

    WHERE p.code IS NOT NULL

    GROUP BY a.reco_id, a.month, a.year;