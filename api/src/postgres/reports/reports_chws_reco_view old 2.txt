CREATE MATERIALIZED VIEW IF NOT EXISTS reports_chws_reco_view AS
    WITH aggregated_events AS (
        SELECT 
            reco_id,
            month,
            year,
            COUNT(*) FILTER (WHERE is_pfa IS TRUE) AS pfa_count,
            COUNT(*) FILTER (WHERE is_bloody_diarrhea IS TRUE) AS bloody_diarrhea_count,
            COUNT(*) FILTER (WHERE is_yellow_fever IS TRUE) AS yellow_fever_count,
            COUNT(*) FILTER (WHERE is_cholera IS TRUE) AS cholera_count,
            COUNT(*) FILTER (WHERE is_maternal_and_neonatal_tetanus IS TRUE) AS tetanus_count,
            COUNT(*) FILTER (WHERE is_viral_diseases IS TRUE) AS viral_diseases_count,
            COUNT(*) FILTER (WHERE is_meningitis IS TRUE) AS meningitis_count,
            COUNT(*) FILTER (WHERE is_maternal_deaths IS TRUE) AS maternal_deaths_count,
            COUNT(*) FILTER (WHERE is_community_deaths IS TRUE) AS community_deaths_count,
            COUNT(*) FILTER (WHERE is_influenza_fever IS TRUE) AS influenza_fever_count
        FROM events_data_view
        GROUP BY reco_id, month, year
    ),

    aggregated_promotional AS (
        SELECT 
            reco_id,
            month,
            year,
            COUNT(*) FILTER (WHERE is_malaria_theme IS TRUE) AS malaria,
            COUNT(*) FILTER (WHERE is_family_planning_theme IS TRUE) AS family_planning,
            COUNT(*) FILTER (WHERE is_prenatal_consultation_theme IS TRUE) AS cpn,
            COUNT(*) FILTER (WHERE is_post_natal_theme IS TRUE) AS cpon,
            COUNT(*) FILTER (WHERE is_delivery_theme IS TRUE) AS delivery,
            COUNT(*) FILTER (WHERE is_vaccination_theme IS TRUE) AS vaccination,
            COUNT(*) FILTER (WHERE is_disease_control_domain IS TRUE) AS ist_vih,
            COUNT(*) FILTER (WHERE is_tuberculosis_theme IS TRUE) AS tuberculosis,
            COUNT(*) FILTER (WHERE is_nutrition_domain IS TRUE) AS nutrition,
            COUNT(*) FILTER (WHERE is_water_hygiene_domain IS TRUE) AS hygiene,
            COUNT(*) FILTER (WHERE is_gbv_domain IS TRUE) AS vbg,
            COUNT(*) FILTER (WHERE is_female_genital_mutilation_theme IS TRUE) AS mgf,
            COUNT(*) FILTER (WHERE is_diarrhea_theme IS TRUE) AS diarrhea,
            COUNT(*) FILTER (WHERE is_pneumonia_theme IS TRUE) AS pneumonia,
            COUNT(*) FILTER (WHERE is_birth_registration_theme IS TRUE) AS birth_registration,
            COUNT(*) FILTER (WHERE is_leprosy_theme IS TRUE) AS leprosy,
            COUNT(*) FILTER (WHERE is_urine_loss_theme IS TRUE) AS urine_loss,
            COUNT(*) FILTER (WHERE is_diabetes_theme IS TRUE) AS diabetes,
            COUNT(*) FILTER (WHERE is_blood_pressure_theme IS TRUE) AS blood_pressure,
            COUNT(*) FILTER (WHERE is_onchocerciasis_theme IS TRUE) AS onchocerciasis,
            COUNT(*) FILTER (WHERE is_human_african_trypanosomiasis_theme IS TRUE) AS hata,
            COUNT(*) FILTER (WHERE is_pfa_theme IS TRUE) AS pfa,
            COUNT(*) FILTER (WHERE is_bloody_diarrhea_theme IS TRUE) AS bloody_diarrhea,
            COUNT(*) FILTER (WHERE is_yellow_fever_theme IS TRUE) AS yellow_fever,
            COUNT(*) FILTER (WHERE is_cholera_theme IS TRUE) AS cholera,
            COUNT(*) FILTER (WHERE is_tetanus_theme IS TRUE) AS tetanus,
            COUNT(*) FILTER (WHERE is_viral_diseases_theme IS TRUE) AS viral_diseases,
            COUNT(*) FILTER (WHERE is_meningitis_theme IS TRUE) AS meningitis,
            COUNT(*) FILTER (WHERE is_vad_method IS TRUE) AS is_vad_method,

            COALESCE(SUM(CASE WHEN is_vad_method IS TRUE AND men_number IS NOT NULL THEN CAST(men_number AS BIGINT) ELSE 0 END), 0) AS men_vad_count,
            COALESCE(SUM(CASE WHEN is_vad_method IS TRUE AND women_number IS NOT NULL THEN CAST(women_number AS BIGINT) ELSE 0 END), 0) AS women_vad_count,
            SUM(CASE WHEN is_talk_method IS TRUE THEN 1 ELSE 0 END) AS is_talk_method,
            COALESCE(SUM(CASE WHEN is_talk_method IS TRUE AND men_number IS NOT NULL THEN CAST(men_number AS BIGINT) ELSE 0 END), 0) AS men_talk_count,
            COALESCE(SUM(CASE WHEN is_talk_method IS TRUE AND women_number IS NOT NULL THEN CAST(women_number AS BIGINT) ELSE 0 END), 0) AS women_talk_count,
            SUM(CASE WHEN is_interpersonal_talk_method IS TRUE THEN 1 ELSE 0 END) AS is_interpersonal_talk_method,
            COALESCE(SUM(CASE WHEN is_interpersonal_talk_method IS TRUE AND men_number IS NOT NULL THEN CAST(men_number AS BIGINT) ELSE 0 END), 0) AS men_interpersonal_talk_count,
            COALESCE(SUM(CASE WHEN is_interpersonal_talk_method IS TRUE AND women_number IS NOT NULL THEN CAST(women_number AS BIGINT) ELSE 0 END), 0) AS women_interpersonal_talk_count
            -- COALESCE(SUM(CAST(men_number AS BIGINT)), 0) FILTER (WHERE is_vad_method IS TRUE AND men_number IS NOT NULL) AS men_vad_count,
            -- COALESCE(SUM(CAST(women_number AS BIGINT)), 0) FILTER (WHERE is_vad_method IS TRUE AND women_number IS NOT NULL) AS women_vad_count,

            -- COUNT(*) FILTER (WHERE is_talk_method IS TRUE) AS is_talk_method,
            -- COALESCE(SUM(CAST(men_number AS BIGINT)), 0) FILTER (WHERE is_talk_method IS TRUE AND men_number IS NOT NULL) AS men_talk_count,
            -- COALESCE(SUM(CAST(women_number AS BIGINT)), 0) FILTER (WHERE is_talk_method IS TRUE AND women_number IS NOT NULL) AS women_talk_count,

            -- COUNT(*) FILTER (WHERE is_interpersonal_talk_method IS TRUE) AS is_interpersonal_talk_method,
            -- COALESCE(SUM(CAST(men_number AS BIGINT)), 0) FILTER (WHERE is_interpersonal_talk_method IS TRUE AND men_number IS NOT NULL) AS men_interpersonal_talk_count,
            -- COALESCE(SUM(CAST(women_number AS BIGINT)), 0) FILTER (WHERE is_interpersonal_talk_method IS TRUE AND women_number IS NOT NULL) AS women_interpersonal_talk_count

        FROM promotional_data_view
        GROUP BY reco_id, month, year
    ),

    aggragate_adult AS (
        SELECT 
            reco_id,
            month,
            year,
            COUNT(*) FILTER (WHERE traffic_accident IS TRUE) AS traffic_accident,
            COUNT(*) FILTER (WHERE burns IS TRUE) AS burns,
            COUNT(*) FILTER (WHERE suspected_tb IS TRUE) AS suspected_tb,
            COUNT(*) FILTER (WHERE dermatosis IS TRUE) AS dermatosis,
            COUNT(*) FILTER (WHERE diarrhea IS TRUE AND is_referred IS TRUE) AS referal_diarrhea,
            COUNT(*) FILTER (WHERE urethral_discharge IS TRUE AND is_referred IS TRUE) AS referal_urethral_discharge,
            COUNT(*) FILTER (WHERE vaginal_discharge IS TRUE AND is_referred IS TRUE) AS referal_vaginal_discharge,
            COUNT(*) FILTER (WHERE loss_of_urine IS TRUE AND is_referred IS TRUE) AS referal_loss_of_urine,
            COUNT(*) FILTER (WHERE accidental_ingestion_caustic_products IS TRUE AND is_referred IS TRUE) AS referal_accidental_ingestion_caustic_products,
            COUNT(*) FILTER (WHERE food_poisoning IS TRUE AND is_referred IS TRUE) AS referal_food_poisoning,
            COUNT(*) FILTER (WHERE oral_and_dental_diseases IS TRUE AND is_referred IS TRUE) AS referal_oral_and_dental_diseases,
            COUNT(*) FILTER (WHERE dog_bites IS TRUE AND is_referred IS TRUE) AS referal_dog_bites,
            COUNT(*) FILTER (WHERE snake_bite IS TRUE AND is_referred IS TRUE) AS referal_snake_bite,
            COUNT(*) FILTER (WHERE measles IS TRUE AND is_referred IS TRUE) AS referal_measles,
            COUNT(*) FILTER (WHERE gender_based_violence IS TRUE AND is_referred IS TRUE) AS referal_gender_based_violence,
            COUNT(*) FILTER (WHERE rdt_given IS TRUE) AS rdt_given,
            COUNT(*) FILTER (WHERE rdt_given IS TRUE AND rdt_result = 'positive') AS rdt_positive,
            COUNT(*) FILTER (WHERE has_malaria IS TRUE AND ((cta_nn IS NOT NULL AND cta_nn > 0) OR (cta_pe IS NOT NULL AND cta_pe > 0) OR (cta_ge IS NOT NULL AND cta_ge > 0) OR (cta_ad IS NOT NULL AND cta_ad > 0))) AS cta_malaria,
            COUNT(*) FILTER (WHERE has_malaria IS TRUE AND is_referred IS TRUE) AS referal_malaria,
            COUNT(*) FILTER (WHERE has_malaria IS TRUE AND age_in_months IS NOT NULL AND age_in_months >= 60) AS more_60_months_malaria

        FROM adult_data_view
        GROUP BY reco_id, month, year
    ),

    aggregated_deaths AS (
        SELECT 
            reco_id,
            month,
            year,
            COUNT(*) FILTER (WHERE sex = 'F' AND is_maternal_death IS TRUE AND is_home_death IS TRUE) AS maternal_home_death_count,
            COUNT(*) FILTER (WHERE has_malaria IS TRUE AND age_in_months IS NOT NULL AND age_in_months >=0 AND age_in_months < 60) AS child_malaria_death_count,
            COUNT(*) FILTER (WHERE has_diarrhea IS TRUE AND age_in_months IS NOT NULL AND age_in_months >=0 AND age_in_months < 60) AS child_diarrhea_death_count,
            COUNT(*) FILTER (WHERE (has_cough_cold IS TRUE OR has_pneumonia IS TRUE) AND age_in_months IS NOT NULL AND age_in_months >=0 AND age_in_months < 60) AS child_coughcold_pneumonia_death_count
        FROM death_data_view
        GROUP BY reco_id, month, year

    ),
    aggregated_patients_deaths AS (
        SELECT 
            reco_id,
            month,
            year,
            COUNT(*) FILTER (WHERE 
                is_home_death IS TRUE AND ((age_in_days IS NOT NULL AND age_in_days >= 0 AND age_in_days < 28) OR (age_in_day_on_creation IS NOT NULL AND age_in_day_on_creation >= 0 AND age_in_day_on_creation < 28) )
            ) AS neonatals_death,
            COUNT(*) FILTER (WHERE 
                is_home_death IS TRUE AND ((age_in_months IS NOT NULL AND age_in_months >= 0 AND age_in_months < 60) OR (age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 0 AND age_in_month_on_creation < 60))
            ) AS child_under_5_death

        FROM (
            SELECT
                'death_data' AS source,
                reco_id,
                month,
                year,
                is_home_death,
                age_in_days,
                age_in_months,
                NULL::INTEGER AS age_in_day_on_creation,
                NULL::INTEGER AS age_in_month_on_creation
            FROM death_data_view

            UNION ALL

            SELECT
                'patient' AS source,
                reco_id,
                month,
                year,
                is_home_death,
                NULL::INTEGER AS age_in_days,
                NULL::INTEGER AS age_in_months,
                age_in_day_on_creation,
                age_in_month_on_creation
            FROM patient_view
        ) AS combined
        GROUP BY reco_id, month, year
    ),

    aggregated_pcimne AS (
        SELECT 
            reco_id,
            month,
            year,

            COUNT(*) FILTER (WHERE rdt_given IS TRUE) AS rdt_total,
            COUNT(*) FILTER (WHERE rdt_given IS TRUE AND has_malaria IS TRUE) AS rdt_positive,
            COUNT(*) FILTER (WHERE rdt_given IS TRUE AND has_malaria IS TRUE AND (COALESCE(cta_nn, 0) > 0 OR COALESCE(cta_pe, 0) > 0 OR COALESCE(cta_ge, 0) > 0 OR COALESCE(cta_ad, 0) > 0)) AS treated_with_cta,
            COUNT(*) FILTER (WHERE rdt_given IS TRUE AND has_malaria IS TRUE AND is_principal_referal IS TRUE AND has_serious_malaria IS TRUE) AS severe_malaria_referred,
            COUNT(*) FILTER (WHERE has_diarrhea IS TRUE) AS diarrhea_cases,
            COUNT(*) FILTER (WHERE has_diarrhea IS TRUE AND is_referred IS TRUE) AS diarrhea_referred,
            COUNT(*) FILTER (WHERE has_diarrhea IS TRUE AND (COALESCE(ors, 0) > 0 OR COALESCE(zinc, 0) > 0)) AS diarrhea_treated_with_ors_zinc,
            COUNT(*) FILTER (WHERE has_pneumonia IS TRUE) AS pneumonia_cases,
            COUNT(*) FILTER (WHERE (has_pneumonia IS TRUE OR has_cough_cold IS TRUE) AND (COALESCE(amoxicillin_250mg, 0) > 0 OR COALESCE(amoxicillin_500mg, 0) > 0) AND age_in_months >= 0 AND age_in_months < 60) AS pneumonia_treated_amox,
            COUNT(DISTINCT patient_id) FILTER (WHERE age_in_months >= 0 AND age_in_months < 60 AND is_referred IS TRUE AND has_pneumonia IS TRUE AND has_cough_cold IS TRUE) AS pneumonia_referred,
            COUNT(DISTINCT patient_id) FILTER (WHERE age_in_months IS NOT NULL AND age_in_months >= 6 AND age_in_months < 60 AND has_malnutrition IS TRUE AND (has_modere_malnutrition IS TRUE OR has_severe_malnutrition IS TRUE)) AS has_malnutrition_count,
            COUNT(DISTINCT patient_id) FILTER (WHERE age_in_months IS NOT NULL AND age_in_months >= 6 AND age_in_months < 60 AND has_malnutrition IS TRUE AND is_referred IS TRUE) AS refered_malnutrition_count,
            COUNT(DISTINCT patient_id) FILTER (WHERE age_in_months IS NOT NULL AND age_in_months >= 2 AND age_in_months < 60 AND has_diarrhea IS TRUE AND ((ors IS NOT NULL AND ors > 0) OR (zinc IS NOT NULL AND zinc > 0))) AS diarrhea_with_osr_zinc_given_count

        FROM pcimne_data_view
        GROUP BY reco_id, month, year
    ),

-- pfa_count
-- bloody_diarrhea_count
-- yellow_fever_count
-- cholera_count
-- tetanus_count
-- viral_diseases_count
-- meningitis_count
-- maternal_deaths_count
-- community_deaths_count
-- influenza_fever_count

    aggregated_demography AS (
        SELECT
            pv.reco_id,
            pv.month,
            pv.year,
            -- MOIS COURANT
            -- COUNT(*) FILTER (WHERE pv.month = pv.month AND pv.year = pv.year) AS population_month,
            COUNT(*) FILTER (WHERE fv.month = pv.month AND fv.year = pv.year) AS households_month,
            COUNT(*) FILTER (WHERE preg.month = pv.month AND preg.year = pv.year AND preg.form IN ('pregnancy_family_planning', 'pregnancy_register')) AS pregnant_month,
            -- COUNT(*) FILTER (WHERE pv.age_in_month_on_creation >= 0 AND pv.age_in_month_on_creation < 12 AND pv.month = pv.month AND pv.year = pv.year) AS children_0_11_month,
            -- COUNT(*) FILTER (WHERE pv.age_in_month_on_creation >= 12 AND pv.age_in_month_on_creation < 60 AND pv.month = pv.month AND pv.year = pv.year) AS children_12_59_month,
            -- COUNT(*) FILTER (WHERE pv.sex = 'F' AND pv.age_in_year_on_creation >= 15 AND pv.age_in_year_on_creation < 50 AND pv.month = pv.month AND pv.year = pv.year) AS women_15_49_month,
            -- COUNT(*) FILTER (WHERE pv.month_of_death = pv.month AND pv.year_of_death = pv.year) AS death_month,


            -- TOTALS
            COUNT(*) AS population_total,
            COUNT(*) FILTER (WHERE fv.reported_date_timestamp <= (EXTRACT(EPOCH FROM DATE_TRUNC('month', TO_DATE(pv.year || '-' || pv.month || '-01', 'YYYY-MM-DD') + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS households_total,
            COUNT(*) FILTER (WHERE preg.form IN ('pregnancy_family_planning', 'pregnancy_register') AND preg.reported_date_timestamp <= (EXTRACT(EPOCH FROM DATE_TRUNC('month', TO_DATE(pv.year || '-' || pv.month || '-01', 'YYYY-MM-DD') + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS pregnant_total
            -- COUNT(*) FILTER (WHERE pv.age_in_month_on_creation >= 0 AND pv.age_in_month_on_creation < 12 AND pv.reported_date_timestamp <= (EXTRACT(EPOCH FROM DATE_TRUNC('month', TO_DATE(pv.year || '-' || pv.month || '-01', 'YYYY-MM-DD') + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS children_0_11_total,
            -- COUNT(*) FILTER (WHERE pv.age_in_month_on_creation >= 12 AND pv.age_in_month_on_creation < 60 AND pv.reported_date_timestamp <= (EXTRACT(EPOCH FROM DATE_TRUNC('month', TO_DATE(pv.year || '-' || pv.month || '-01', 'YYYY-MM-DD') + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS children_12_59_total,
            -- COUNT(*) FILTER (WHERE pv.sex = 'F' AND pv.age_in_year_on_creation >= 15 AND pv.age_in_year_on_creation < 50 AND pv.reported_date_timestamp <= (EXTRACT(EPOCH FROM DATE_TRUNC('month', TO_DATE(pv.year || '-' || pv.month || '-01', 'YYYY-MM-DD') + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS women_15_49_total,
            -- COUNT(*) FILTER (WHERE pv.month_of_death IS NOT NULL AND pv.year_of_death IS NOT NULL AND pv.reported_date_timestamp <= (EXTRACT(EPOCH FROM DATE_TRUNC('month', TO_DATE(pv.year || '-' || pv.month || '-01', 'YYYY-MM-DD') + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS death_total

        FROM patient_view pv
        LEFT JOIN family_view fv 
            ON pv.reco_id = fv.reco_id AND fv.month = pv.month AND fv.year = pv.year
        LEFT JOIN pregnant_data_view preg 
            ON pv.reco_id = preg.reco_id AND preg.month = pv.month AND preg.year = pv.year

        GROUP BY pv.reco_id, pv.month, pv.year
    ),

    aggregated_vaccinations AS (
        SELECT
            reco_id,
            month,
            year,

            COUNT(*) FILTER (WHERE vaccine_BCG IS NOT TRUE AND age_in_days BETWEEN 0 AND 45) AS bcg_to_catchup,
            COUNT(*) FILTER (WHERE vaccine_BCG IS TRUE AND age_in_days BETWEEN 0 AND 45) AS bcg_caughtup,
            COUNT(*) FILTER (WHERE vaccine_VPO_0 IS NOT TRUE AND age_in_days BETWEEN 0 AND 45) AS polio0_to_catchup,
            COUNT(*) FILTER (WHERE vaccine_VPO_0 IS TRUE AND age_in_days BETWEEN 0 AND 45) AS polio0_caughtup,
            COUNT(*) FILTER (WHERE vaccine_PENTA_3 IS NOT TRUE AND age_in_months BETWEEN 3 AND 5) AS penta3_to_catchup,
            COUNT(*) FILTER (WHERE vaccine_PENTA_3 IS TRUE AND age_in_months BETWEEN 3 AND 5) AS penta3_caughtup,
            COUNT(*) FILTER (WHERE (vaccine_VAR_2 IS TRUE OR vaccine_VAA IS TRUE) AND age_in_months BETWEEN 9 AND 11) AS fully_vaccinated_9_11,
            COUNT(*) FILTER (WHERE COALESCE(is_birth_vaccine_ok, FALSE) IS NOT TRUE AND COALESCE(is_six_weeks_vaccine_ok, FALSE) IS NOT TRUE AND COALESCE(is_ten_weeks_vaccine_ok, FALSE) IS NOT TRUE AND COALESCE(is_forteen_weeks_vaccine_ok, FALSE) IS NOT TRUE AND COALESCE(is_nine_months_vaccine_ok, FALSE) IS NOT TRUE AND COALESCE(is_fifty_months_vaccine_ok, FALSE) IS NOT TRUE AND age_in_months BETWEEN 0 AND 59) AS zero_dose_to_catchup,
            COUNT(*) FILTER (WHERE age_in_months BETWEEN 0 AND 59 AND (is_birth_vaccine_ok IS TRUE OR is_six_weeks_vaccine_ok IS TRUE OR is_ten_weeks_vaccine_ok IS TRUE OR is_forteen_weeks_vaccine_ok IS TRUE OR is_nine_months_vaccine_ok IS TRUE OR is_fifty_months_vaccine_ok IS TRUE)) AS zero_dose_caughtup

        FROM vaccination_data_view
        GROUP BY reco_id, month, year
    ),

    aggregated_patients AS (
        SELECT
            reco_id,
            month,
            year,
            COUNT(*) AS cover_month_population,
            COUNT(*) FILTER (WHERE reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(year || '-' || month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS total_cover_month_population,

            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 0 AND age_in_month_on_creation < 2) AS newborns_registered,
            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 0 AND age_in_month_on_creation < 2 AND reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(year || '-' || month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS total_newborns_registered,

            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 0 AND age_in_month_on_creation < 12) AS child_between_0_11_month,
            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 0 AND age_in_month_on_creation < 12 AND reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(year || '-' || month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS total_child_between_0_11_month,
            
            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 12 AND age_in_month_on_creation < 60) AS child_between_12_59_month,
            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 12 AND age_in_month_on_creation < 60 AND reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(year || '-' || month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS total_child_between_12_59_month,

            COUNT(*) FILTER (WHERE sex = 'F' AND age_in_year_on_creation IS NOT NULL AND age_in_year_on_creation >= 15  AND age_in_year_on_creation < 50) AS women_between_15_49_year,
            COUNT(*) FILTER (WHERE sex = 'F' AND age_in_year_on_creation IS NOT NULL AND age_in_year_on_creation >= 15  AND age_in_year_on_creation < 50 AND reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(year || '-' || month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS total_women_between_15_49_year,

            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 0 AND age_in_month_on_creation < 60  AND (has_birth_certificate IS DISTINCT FROM TRUE)) AS children_referred_for_birth_cert,
            COUNT(*) FILTER (WHERE age_in_month_on_creation IS NOT NULL AND age_in_month_on_creation >= 0 AND age_in_month_on_creation < 60  AND has_birth_certificate IS TRUE) AS children_with_birth_cert,

            COUNT(*) FILTER (WHERE month_of_death IS NOT NULL AND year_of_death IS NOT NULL AND month_of_death = month AND year_of_death = year) AS community_death,
            COUNT(*) FILTER (WHERE month_of_death IS NOT NULL AND year_of_death IS NOT NULL AND reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(year || '-' || month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)) AS total_community_death
                    
            
        FROM patient_view
        GROUP BY reco_id, month, year
    )


    SELECT 
        CONCAT(a.month, '-', a.year, '-', a.reco_id) AS id,
        a.month,
        a.year,
        a.reco_id,
            
        jsonb_build_object(
            'index', 1,
            'group', 'Suivi des RECO',
            'position', 'I',
            'data', jsonb_build_array(
                jsonb_build_object(
                    'index', 1,
                    'indicator', 'Nombre total de RECO couvert',
                    'de_number', (
                        CASE 
                            WHEN a.reco_id IN (
                                SELECT DISTINCT reco_id FROM vaccination_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM pcimne_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM newborn_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM family_view
                                UNION 
                                SELECT DISTINCT reco_id FROM patient_view
                                UNION 
                                SELECT DISTINCT reco_id FROM death_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM adult_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM promotional_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM events_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM pregnant_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM delivery_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM family_planning_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM reco_meg_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM referal_data_view
                                UNION 
                                SELECT DISTINCT reco_id FROM reco_chws_supervision_view
                            ) 
                            THEN 1 
                            ELSE 0 
                        END::BIGINT
                    ),
                    'observation', NULL
                ),

                jsonb_build_object(
                    'index', 2,
                    'indicator', 'Nombre total de RECO supervisé au cours du mois',
                    'de_number', (
                        CASE 
                            WHEN EXISTS (
                                SELECT 1 
                                FROM (
                                    SELECT DISTINCT reco_id 
                                    FROM reco_chws_supervision_view 
                                    WHERE reco_id IS NOT NULL 
                                    AND reco_id = a.reco_id 
                                    AND month = a.month AND year = a.year 
                                ) AS reco_union
                                WHERE reco_union.reco_id = a.reco_id
                            ) 
                            THEN 1 
                            ELSE 0 
                        END::BIGINT
                    ),
                    'observation', NULL
                ),

                jsonb_build_object(
                    'index', 3,
                    'indicator', 'Nombre de RECO fonctionnel au cours du Mois (RECO ayant déposé le rapport)',
                    'de_number', (
                        CASE 
                            WHEN a.reco_id IN (
                                SELECT DISTINCT reco_id FROM vaccination_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM pcimne_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM newborn_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM family_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM patient_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM death_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM adult_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM promotional_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM events_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM pregnant_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM delivery_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM family_planning_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM reco_meg_data_view WHERE month = a.month AND year = a.year
                                UNION 
                                SELECT DISTINCT reco_id FROM referal_data_view WHERE month = a.month AND year = a.year
                            ) 
                            THEN 1 
                            ELSE 0 
                        END::BIGINT
                    ),
                    'observation', NULL
                )
            )
        ) AS reco_monitoring,

        jsonb_build_object(
            'index', 2,
            'group', 'Démographie',
            'position', 'II',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Population couverte par les RECO (ce mois)', 'de_number', COALESCE((pat.cover_month_population), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Population couverte par les RECO (total) 📌', 'de_number', COALESCE((pat.total_cover_month_population), 0), 'observation', NULL),
                
                jsonb_build_object('index', 3, 'indicator', 'Nombre de ménages couverts par les RECO (ce mois)', 'de_number', COALESCE((dem.households_month), 0), 'observation', NULL),
                jsonb_build_object('index', 4, 'indicator', 'Nombre de ménages couverts par les RECO (total) 📌', 'de_number', COALESCE((dem.households_total), 0), 'observation', NULL),
                
                jsonb_build_object('index', 5, 'indicator', 'Nombre de Femmes enceintes dénombrées par mois (ce mois)', 'de_number', COALESCE((dem.pregnant_month), 0), 'observation', NULL),
                jsonb_build_object('index', 6, 'indicator', 'Nombre de Femmes enceintes dénombrées par mois (total) 📌', 'de_number', COALESCE((dem.pregnant_total), 0), 'observation', NULL),
                
                jsonb_build_object('index', 7, 'indicator', 'Nombre d''enfants de 0 - 11 mois dénombrés (ce mois)', 'de_number', COALESCE((pat.child_between_0_11_month), 0), 'observation', NULL),
                jsonb_build_object('index', 8, 'indicator', 'Nombre d''enfants de 0 - 11 mois dénombrés (total) 📌', 'de_number', COALESCE((pat.total_child_between_0_11_month), 0), 'observation', NULL),
                
                jsonb_build_object('index', 9, 'indicator', 'Nombre d''enfants de 12-59 mois dénombrés (ce mois)', 'de_number', COALESCE((pat.child_between_12_59_month), 0), 'observation', NULL),
                jsonb_build_object('index', 10, 'indicator', 'Nombre d''enfants de 12-59 mois dénombrés (total) 📌', 'de_number', COALESCE((pat.total_child_between_12_59_month), 0), 'observation', NULL),
                
                jsonb_build_object('index', 11, 'indicator', 'Nombre de femmes de 15 -49 ans dénombrées (ce mois)', 'de_number', COALESCE((pat.women_between_15_49_year), 0), 'observation', NULL),
                jsonb_build_object('index', 12, 'indicator', 'Nombre de femmes de 15 -49 ans dénombrées (total) 📌', 'de_number', COALESCE((pat.total_women_between_15_49_year), 0), 'observation', NULL),
                
                jsonb_build_object('index', 13, 'indicator', 'Nombre de décès communautaires enregistrés par mois (ce mois)', 'de_number', COALESCE((pat.community_death), 0), 'observation', NULL),
                jsonb_build_object('index', 14, 'indicator', 'Nombre de décès communautaires enregistrés par mois (total) 📌', 'de_number', COALESCE((pat.total_community_death), 0), 'observation', NULL)
            )
        ) AS demography,


        jsonb_build_object(
            'index', 3,
            'group', 'Santé de l''Enfant 0-59 Mois',
            'position', 'III',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Nombre de nouveaux nés de 0-45 jours à rattrapper pour le BCG', 'de_number', COALESCE((vac.bcg_to_catchup), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Nombre de nouveaux nés de 0-45 jours rattrappé pour le BCG', 'de_number', COALESCE((vac.bcg_caughtup), 0), 'observation', NULL),
                jsonb_build_object('index', 3, 'indicator', 'Nombre de nouveaux nés de 0-45 Jours à rattrapper pour le Polio 0', 'de_number', COALESCE((vac.polio0_to_catchup), 0), 'observation', NULL),
                jsonb_build_object('index', 4, 'indicator', 'Nombre de nouveaux nés de 0-45 Jours rattrappé pour le Polio 0', 'de_number', COALESCE((vac.polio0_caughtup), 0), 'observation', NULL),
                jsonb_build_object('index', 5, 'indicator', 'Nombre d''enfants de 3-5 mois à rattrapper pour le Penta 3', 'de_number', COALESCE((vac.penta3_to_catchup), 0), 'observation', NULL),
                jsonb_build_object('index', 6, 'indicator', 'Nombre d''enfants de 3-5 mois rattrappé pour le Penta 3', 'de_number', COALESCE((vac.penta3_caughtup), 0), 'observation', NULL),
                jsonb_build_object('index', 7, 'indicator', 'Nombre d''enfants de 9 à 11 mois entièrement vaccinés VAR / VAA', 'de_number', COALESCE((vac.fully_vaccinated_9_11), 0), 'observation', NULL),
                jsonb_build_object('index', 8, 'indicator', 'Nombre d''enfant zéro dose à rattrapper', 'de_number', COALESCE((vac.zero_dose_to_catchup), 0), 'observation', NULL),
                jsonb_build_object('index', 9, 'indicator', 'Nombre d''enfant zéro dose rattrappé', 'de_number', COALESCE((vac.zero_dose_caughtup), 0), 'observation', NULL),
    
                jsonb_build_object(
                    'index', 10, 
                    'indicator', 'Nombre de nouveau nés  referés avec signes de danger', 
                    'de_number', (
                        SELECT COUNT(DISTINCT patient_id)
                        FROM newborn_data_view 
                        WHERE reco_id = a.reco_id 
                            AND month = a.month AND year = a.year
                            AND is_referred IS TRUE
                            AND has_danger_sign IS TRUE
                            AND age_in_months IS NOT NULL AND age_in_months >= 0 AND age_in_months < 2
                    ), 
                    'observation', NULL
                ),
                jsonb_build_object('index', 11, 'indicator', 'Nombre de nouveau-nés enregistrés par mois par les RECO', 'de_number', COALESCE((pat.newborns_registered), 0), 'observation', NULL),
                jsonb_build_object('index', 12, 'indicator', 'Nombre d''enfants orientés pour l''extrait de naissance', 'de_number', COALESCE((pat.children_referred_for_birth_cert), 0), 'observation', NULL),
                jsonb_build_object('index', 13, 'indicator', 'Nombre d''enfants ayant reçu l''extrait de naissance', 'de_number', COALESCE((pat.children_with_birth_cert), 0), 'observation', NULL),
                jsonb_build_object('index', 14, 'indicator', 'Nombre d''enfants de 6 à 59 mois orienté pour la vitamine A ❌', 'de_number', 0, 'observation', NULL),
                jsonb_build_object(
                    'index', 15, 
                    'indicator', 'Nombre d''enfant  évalués pour la malnutrition', 
                    'de_number', (
                        SELECT COUNT(DISTINCT patient_id)
                        FROM (
                            SELECT patient_id 
                            FROM pcimne_data_view 
                            WHERE year = a.year AND month = a.month AND reco_id = a.reco_id AND patient_id IS NOT NULL AND has_malnutrition IS TRUE  
                            
                            UNION ALL 

                            SELECT patient_id FROM newborn_data_view 
                            WHERE year = a.year AND month = a.month AND reco_id = a.reco_id AND patient_id IS NOT NULL AND has_malnutrition IS TRUE  
                        )
                        
                    ),
                    'observation', NULL
                ),
                jsonb_build_object('index', 16, 'indicator', 'Nombre total d''enfants de 06 à 59 mois dont PB est inferieur à 12,5 Cm', 'de_number', COALESCE((pci.has_malnutrition_count), 0), 'observation', NULL),
                jsonb_build_object('index', 17, 'indicator', 'Nombre d''enfants de 6 à 59 mois à risque de Malnutrition orientés vers le centre/poste de santé (❌)', 'de_number', COALESCE((pci.refered_malnutrition_count), 0), 'observation', NULL),
                jsonb_build_object(
                    'index', 18, 
                    'indicator', 'Nombre total de cas de diarrhées chez les enfants de 0 à 59 mois', 
                    'de_number', (
                        SELECT COUNT(DISTINCT patient_id)
                        FROM (
                            SELECT patient_id FROM pcimne_data_view 
                                WHERE patient_id IS NOT NULL AND reco_id = a.reco_id AND has_diarrhea IS TRUE AND year = a.year 
                                AND month = a.month AND age_in_months IS NOT NULL AND age_in_months >= 0 AND age_in_months < 60 
                            
                            UNION ALL 
                            
                            SELECT patient_id FROM newborn_data_view 
                                WHERE patient_id IS NOT NULL AND reco_id = a.reco_id AND has_diarrhea IS TRUE AND year = a.year 
                                AND month = a.month AND age_in_months IS NOT NULL AND age_in_months >= 0 AND age_in_months < 60 
                        )
                    ),
                    'observation', NULL
                ),
                jsonb_build_object('index', 19, 'indicator', 'Nombre d''enfants 0-59 mois avec diarrhées ayant recu SRO + Zinc', 'de_number', COALESCE((pci.diarrhea_with_osr_zinc_given_count), 0), 'observation', NULL),
                jsonb_build_object(
                    'index', 20, 
                    'indicator', 'Nombre de ménages ayant des latrines fonctionnelles dans leur foyer', 
                    'de_number', (
                        SELECT COUNT(*) FROM family_view 
                        WHERE reco_id = a.reco_id 
                            AND year = a.year AND month = a.month 
                            AND household_has_working_latrine IS TRUE 
                            AND reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(a.year || '-' || a.month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)
                    ),
                    'observation', NULL
                ),

                jsonb_build_object(
                    'index', 21, 
                    'indicator', 'Nombre de ménages vivant avec les enfants de 0 à 59 mois ayant accès à l''eau potable', 
                    'de_number', (
                        SELECT COUNT(*) FROM family_view 
                        WHERE id IN (
                            SELECT DISTINCT family_id
                            FROM patient_view 
                            WHERE year = a.year AND month = a.month 
                            AND reco_id = a.reco_id 
                            AND birth_date IS NOT NULL AND AGE(CURRENT_DATE, birth_date) < INTERVAL '60 months'
                        ) 
                        AND reco_id = a.reco_id 
                        AND household_has_good_water_access IS TRUE 
                        AND year = a.year AND month = a.month 
                        AND reported_date_timestamp <= (EXTRACT(EPOCH FROM (DATE_TRUNC('month', TO_DATE(a.year || '-' || a.month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')) * 1000)
                    ),
                    'observation', NULL
                )
            )
        ) AS child_health_0_59_months,

        jsonb_build_object(
            'index', 4,
            'group', 'Santé de la Mère',
            'position', 'IV',
            'data', jsonb_build_array(
                jsonb_build_object(
                    'index', 1, 
                    'indicator', 'Nombre de femmes enceintes orientées par mois en CPN 1', 
                    'de_number', (
                        SELECT  COUNT(*) FROM pregnant_data_view 
                        WHERE reco_id = a.reco_id 
                        AND month = a.month AND year = a.year 
                        AND form IN ('pregnancy_family_planning', 'pregnancy_register') 
                        AND cpn_done IS NOT TRUE AND (cpn_number IS NULL OR cpn_number <= 0)
                    ), 
                    'observation', NULL
                ),
                jsonb_build_object(
                    'index', 2, 
                    'indicator', 'Nombre d’accouchements à domicile (uniquement)', 
                    'de_number', (
                        SELECT  COUNT(*) FROM delivery_data_view 
                        WHERE reco_id = a.reco_id 
                        AND month = a.month AND year = a.year 
                        AND is_home_delivery IS TRUE 
                    ), 
                    'observation', NULL
                ),
                jsonb_build_object(
                    'index', 3, 
                    'indicator', 'Nombre total de femmes enceintes orienté par les RECO dans une structure de santé pour accouchement', 
                    'de_number', (
                        SELECT  COUNT(*) FROM pregnant_data_view 
                        WHERE reco_id = a.reco_id 
                        AND month = a.month AND year = a.year 
                        AND form IN ('pregnancy_family_planning', 'pregnancy_register') 
                        AND is_home_delivery_wanted IS TRUE 
                    ), 
                    'observation', NULL
                ),
                jsonb_build_object('index', 4, 'indicator', 'Nombre de décès maternels à domicile enregistrés par les RECO', 'de_number', COALESCE((ddv.maternal_home_death_count), 0), 'observation', NULL),
                jsonb_build_object('index', 5, 'indicator', 'Nombre de décès néonatals (<28 jours) à domicile enregistrés par les RECO', 'de_number', COALESCE((pde.neonatals_death), 0), 'observation', NULL),
                jsonb_build_object('index', 6, 'indicator', 'Nombre de décès d''enfants de moins de cinq ans (<5 ans) à domicile enregistrés par les RECO', 'de_number', COALESCE((pde.child_under_5_death), 0), 'observation', NULL),
                jsonb_build_object(
                    'index', 7, 
                    'indicator', 'Nombre de femme enceintes orientée vers le CS par les RECO pour CPN', 
                    'de_number', (
                        SELECT  COUNT(*) FROM pregnant_data_view 
                        WHERE reco_id = a.reco_id 
                        AND month = a.month AND year = a.year 
                        AND form IN ('pregnancy_family_planning', 'pregnancy_register') 
                        AND cpn_done IS NOT TRUE
                    ),  
                    'observation', NULL
                ),
                jsonb_build_object(
                    'index', 8, 
                    'indicator', 'Nombre de femmes nouvelles utilisatrices des methodes contraceptives dans la communauté', 
                    'de_number', (
                        SELECT  COUNT(*) FROM family_planning_data_view 
                        WHERE reco_id = a.reco_id 
                        AND month = a.month AND year = a.year 
                        AND form IN ('pregnancy_family_planning', 'family_planning') 
                        AND has_counseling IS TRUE 
                        AND already_use_method IS NOT TRUE 
                    ), 
                    'observation', NULL
                ),
                jsonb_build_object(
                    'index', 9, 
                    'indicator', 'Nombre de femmes enceintes referées au CS par les RECO avec signes de danger', 
                    'de_number', (
                        SELECT  COUNT(*) FROM pregnant_data_view 
                        WHERE reco_id = a.reco_id 
                        AND month = a.month AND year = a.year 
                        AND form IN ('pregnancy_family_planning', 'pregnancy_register') 
                        AND is_referred IS TRUE 
                        AND has_danger_sign IS TRUE 
                    ), 
                    'observation', NULL
                )
            )
        ) AS mother_health,
        
        jsonb_build_object(
            'index', 5,
            'group', 'ACTIVITE PCIMNE',
            'position', 'V',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Nombre de TDR palu effectué par les RECO', 'de_number', COALESCE((pci.rdt_total), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Nombre de TDR palu positif réalisé par les RECO', 'de_number', COALESCE((pci.rdt_positive), 0), 'observation', NULL),
                jsonb_build_object('index', 3, 'indicator', 'Nombre de cas traités avec CTA par les RECO', 'de_number', COALESCE((pci.treated_with_cta), 0), 'observation', NULL),
                jsonb_build_object('index', 4, 'indicator', 'Nombre de cas de palu grave reféré par les RECO au CS', 'de_number', COALESCE((pci.severe_malaria_referred), 0), 'observation', NULL),
                jsonb_build_object('index', 5, 'indicator', 'Nombre de cas de deces lié au paludisme enregistré par le RECO', 'de_number', COALESCE((ddv.child_malaria_death_count), 0), 'observation', NULL),
                jsonb_build_object('index', 6, 'indicator', 'Nombre de cas de diarrhée enregistré par les RECO', 'de_number', COALESCE((pci.diarrhea_cases), 0), 'observation', NULL),
                jsonb_build_object('index', 7, 'indicator', 'Nombre de cas de diarrhée reféré par les RECO au CS', 'de_number', COALESCE((pci.diarrhea_referred), 0), 'observation', NULL),
                jsonb_build_object('index', 8, 'indicator', 'Nombre de deces dû à la diarrhée enregistré par les RECO', 'de_number', COALESCE((ddv.child_diarrhea_death_count), 0), 'observation', NULL),
                jsonb_build_object('index', 9, 'indicator', 'Nombre de cas de diarrhée traités par les RECO avec SRO et ZINC', 'de_number', COALESCE((pci.diarrhea_treated_with_ors_zinc), 0), 'observation', NULL),
                jsonb_build_object('index', 10, 'indicator', 'Nombre de cas de Toux/Difficulté respiratoire/pneumonie simple enregisté par les RECO', 'de_number', COALESCE((pci.pneumonia_cases), 0), 'observation', NULL),
                jsonb_build_object('index', 11, 'indicator', 'Nombre de cas traités avec Amoxicilline de Toux/Difficulté respiratoire/pneumonie simple enregisté par les RECO', 'de_number', COALESCE((pci.pneumonia_treated_amox), 0), 'observation', NULL),
                jsonb_build_object('index', 12, 'indicator', 'Nombre de cas reféré de Toux/Difficulté respiratoire/pneumonie simple par les RECO', 'de_number', COALESCE((pci.pneumonia_referred), 0), 'observation', NULL),
                jsonb_build_object('index', 13, 'indicator', 'Nombre de deces Toux/Difficulté respiratoire/pneumonie simple', 'de_number', COALESCE((ddv.child_coughcold_pneumonia_death_count), 0), 'observation', NULL),
                jsonb_build_object('index', 14, 'indicator', 'Nombre de traitements de pré-référence (RECTOCAPS) réalisées par les RECO ❌', 'de_number', 0, 'observation', NULL)
            )
        ) AS pcimne_activity,
        
        jsonb_build_object(
            'index', 6,
            'group', 'ACTIVITES MORBIDITES',
            'position', 'VI',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Nombre de cas d''accident de circulation notifié par les RECO', 'de_number', COALESCE((adu.traffic_accident), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Nombre de cas de brûlure notifié par les RECO', 'de_number', COALESCE((adu.burns), 0), 'observation', NULL),
                jsonb_build_object('index', 3, 'indicator', 'Nombre de cas suspects de TB orienté par les RECO', 'de_number', COALESCE((adu.suspected_tb), 0), 'observation', NULL),
                jsonb_build_object('index', 4, 'indicator', 'Nombre de cas de dermatose orienté par les RECO', 'de_number', COALESCE((adu.dermatosis), 0), 'observation', NULL),
                jsonb_build_object('index', 5, 'indicator', 'Nombre de cas de diarrhées réferé par les RECO > à 5 ans', 'de_number', COALESCE((adu.referal_diarrhea), 0), 'observation', NULL),
                jsonb_build_object('index', 6, 'indicator', 'Nombre de cas d''écoulement uretrale réferé au CS par les RECO', 'de_number', COALESCE((adu.referal_urethral_discharge), 0), 'observation', NULL),
                jsonb_build_object('index', 7, 'indicator', 'Nombre de cas d''écoulement vaginal réferé au CS par les RECO', 'de_number', COALESCE((adu.referal_vaginal_discharge), 0), 'observation', NULL),
                jsonb_build_object('index', 8, 'indicator', 'Nombre de cas de perte urinaire réferé au CS par les RECO', 'de_number', COALESCE((adu.referal_loss_of_urine), 0), 'observation', NULL),
                jsonb_build_object('index', 9, 'indicator', 'Nombre de cas d''ingestion accidentelle des produits caustiques réferé au CS par les RECO', 'de_number', COALESCE((adu.referal_accidental_ingestion_caustic_products), 0), 'observation', NULL),
                jsonb_build_object('index', 10, 'indicator', 'Nombre de cas d''intoxication alimentaire réferée au CS par les RECO', 'de_number', COALESCE((adu.referal_food_poisoning), 0), 'observation', NULL),
                jsonb_build_object('index', 11, 'indicator', 'Nombre de cas de maladies bucco-dentaires réferé au CS par les RECO', 'de_number', COALESCE((adu.referal_oral_and_dental_diseases), 0), 'observation', NULL),
                jsonb_build_object('index', 12, 'indicator', 'Nombre de cas de morsure de chien réferée au CS par les RECO', 'de_number', COALESCE((adu.referal_dog_bites), 0), 'observation', NULL),
                jsonb_build_object('index', 13, 'indicator', 'Nombre de cas de morsure de serpent réferée au CS par les RECO', 'de_number', COALESCE((adu.referal_snake_bite), 0), 'observation', NULL),
                jsonb_build_object('index', 14, 'indicator', 'Nombre de cas de rougeole réferé au CS par les RECO', 'de_number', COALESCE((adu.referal_measles), 0), 'observation', NULL),
                jsonb_build_object('index', 15, 'indicator', 'Nombre de cas de violence basées sur le genre (VBG) réferé au CS par les RECO', 'de_number', COALESCE((adu.referal_gender_based_violence), 0), 'observation', NULL)
            )
        ) AS morbidity_activities,
        
        jsonb_build_object(
            'index', 7,
            'group', 'Paludisme(supérieur à 5 ans)',
            'position', 'VII',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Nombre de TDR effectué par les RECO', 'de_number', COALESCE((adu.rdt_given), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Nombre de TDR positif réalisé par les RECO', 'de_number', COALESCE((adu.rdt_positive), 0), 'observation', NULL),
                jsonb_build_object('index', 3, 'indicator', 'Nombre de cas de palu traités avec CTA par les RECO', 'de_number', COALESCE((adu.cta_malaria), 0), 'observation', NULL),
                jsonb_build_object('index', 4, 'indicator', 'Nombre de cas  de palu reféré au CS par les RECO', 'de_number', COALESCE((adu.referal_malaria), 0), 'observation', NULL),
                jsonb_build_object('index', 5, 'indicator', 'Nombre de cas de deces lié au paludisme notifié par les RECO', 'de_number', COALESCE((adu.more_60_months_malaria), 0), 'observation', NULL)
            )
        ) AS malaria_more_5_years,

        jsonb_build_object(
            'index', 8,
            'bigGroup', 'ACTIVITE PROMOTIONNELLE',
            'group', 'VISITE A DOMICILE',
            'position', 'VIII',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Nombre de visites à domicile réalisée par les RECO par mois', 'de_number', COALESCE((prm.is_vad_method), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Nombre d''homme touché  par les VAD', 'de_number', COALESCE((prm.men_vad_count), 0), 'observation', NULL),
                jsonb_build_object('index', 3, 'indicator', 'Nombre de femmes touchées par les VAD', 'de_number', COALESCE((prm.women_vad_count), 0), 'observation', NULL)
            )
        ) AS home_visit,
        
        jsonb_build_object(
            'index', 9,
            'bigGroup', 'ACTIVITE PROMOTIONNELLE',
            'group', 'CAUSERIE EDUCATIVE',
            'position', 'VIII',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Nombre de causeries éducatives effectuées par les RECO', 'de_number', COALESCE((prm.is_talk_method), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Nombre d''homme touché  par les causeries éducatives', 'de_number', COALESCE((prm.men_talk_count), 0), 'observation', NULL),
                jsonb_build_object('index', 3, 'indicator', 'Nombre de femmes touchées par les causeries éducatives', 'de_number', COALESCE((prm.women_talk_count), 0), 'observation', NULL)
            )
        ) AS educational_talk,
        
        jsonb_build_object(
            'index', 9,
            'bigGroup', 'ACTIVITE PROMOTIONNELLE',
            'group', 'CAUSERIE INTERPERSONELLE',
            'position', 'VIII',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1, 'indicator', 'Nombre de causeries interpersonelles effectuées par les RECO', 'de_number', COALESCE((prm.is_interpersonal_talk_method), 0), 'observation', NULL),
                jsonb_build_object('index', 2, 'indicator', 'Nombre d''homme ayant reçu de causeries interpersonelles', 'de_number', COALESCE((prm.men_interpersonal_talk_count), 0), 'observation', NULL),
                jsonb_build_object('index', 3, 'indicator', 'Nombre de femmes ayant reçu de causeries interpersonelles', 'de_number', COALESCE((prm.women_interpersonal_talk_count), 0), 'observation', NULL)
            )
        ) AS interpersonal_talk,

        jsonb_build_object(
            'index', 10,
            'group', 'DOMAINES DEVELOPPES',
            'position', 'IX',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1,  'indicator', 'Paludisme', 'de_number', COALESCE((prm.malaria), 0), 'observation', NULL),
                jsonb_build_object('index', 2,  'indicator', 'Planification Familiale', 'de_number', COALESCE((prm.family_planning), 0), 'observation', NULL),
                jsonb_build_object('index', 3,  'indicator', 'CPN', 'de_number', COALESCE((prm.cpn), 0), 'observation', NULL),
                jsonb_build_object('index', 4,  'indicator', 'CPoN', 'de_number', COALESCE((prm.cpon), 0), 'observation', NULL),
                jsonb_build_object('index', 5,  'indicator', 'Accouchement', 'de_number', COALESCE((prm.delivery), 0), 'observation', NULL),
                jsonb_build_object('index', 6,  'indicator', 'Vaccination', 'de_number', COALESCE((prm.vaccination), 0), 'observation', NULL),
                jsonb_build_object('index', 7,  'indicator', 'IST / VIH', 'de_number', COALESCE((prm.ist_vih), 0), 'observation', NULL),
                jsonb_build_object('index', 8,  'indicator', 'Tuberculose', 'de_number', COALESCE((prm.tuberculosis), 0), 'observation', NULL),
                jsonb_build_object('index', 9,  'indicator', 'Nutrition', 'de_number', COALESCE((prm.nutrition), 0), 'observation', NULL),
                jsonb_build_object('index', 10, 'indicator', 'Eau, Hygiène et assainissement', 'de_number', COALESCE((prm.hygiene), 0), 'observation', NULL),
                jsonb_build_object('index', 11, 'indicator', 'VBG', 'de_number', COALESCE((prm.vbg), 0), 'observation', NULL),
                jsonb_build_object('index', 12, 'indicator', 'MGF', 'de_number', COALESCE((prm.mgf), 0), 'observation', NULL),
                jsonb_build_object('index', 13, 'indicator', 'Diarrhée', 'de_number', COALESCE((prm.diarrhea), 0), 'observation', NULL),
                jsonb_build_object('index', 14, 'indicator', 'Pneumonie', 'de_number', COALESCE((prm.pneumonia), 0), 'observation', NULL),
                jsonb_build_object('index', 15, 'indicator', 'Enregistrement des Naissances', 'de_number', COALESCE((prm.birth_registration), 0), 'observation', NULL),
                jsonb_build_object('index', 16, 'indicator', 'Lèpre', 'de_number', COALESCE((prm.leprosy), 0), 'observation', NULL),
                jsonb_build_object('index', 17, 'indicator', 'Pertes d''Urines', 'de_number', COALESCE((prm.urine_loss), 0), 'observation', NULL),
                jsonb_build_object('index', 18, 'indicator', 'Diabète', 'de_number', COALESCE((prm.diabetes), 0), 'observation', NULL),
                jsonb_build_object('index', 19, 'indicator', 'Tension artérielle', 'de_number', COALESCE((prm.blood_pressure), 0), 'observation', NULL),
                jsonb_build_object('index', 20, 'indicator', 'Onchocercose', 'de_number', COALESCE((prm.onchocerciasis), 0), 'observation', NULL),
                jsonb_build_object('index', 21, 'indicator', 'Trypanosomiase Humaine Africaine', 'de_number', COALESCE((prm.hata), 0), 'observation', NULL),
                jsonb_build_object('index', 22, 'indicator', 'PFA', 'de_number', COALESCE((prm.pfa), 0), 'observation', NULL),
                jsonb_build_object('index', 23, 'indicator', 'Diarrhée sanglante', 'de_number', COALESCE((prm.bloody_diarrhea), 0), 'observation', NULL),
                jsonb_build_object('index', 24, 'indicator', 'Fièvre Jaune', 'de_number', COALESCE((prm.yellow_fever), 0), 'observation', NULL),
                jsonb_build_object('index', 25, 'indicator', 'Cholera', 'de_number', COALESCE((prm.cholera), 0), 'observation', NULL),
                jsonb_build_object('index', 26, 'indicator', 'Tétanos Maternel et Néonatal', 'de_number', COALESCE((prm.tetanus), 0), 'observation', NULL),
                jsonb_build_object('index', 27, 'indicator', 'Maladies virales', 'de_number', COALESCE((prm.viral_diseases), 0), 'observation', NULL),
                jsonb_build_object('index', 28, 'indicator', 'Méningite', 'de_number', COALESCE((prm.meningitis), 0), 'observation', NULL)
            )
        ) AS developed_areas,
        
        jsonb_build_object(
            'index', 11,
            'group', 'MALADIES ET EVENEMENTS NOTIFIES ET ALERTES',
            'position', 'X',
            'data', jsonb_build_array(
                jsonb_build_object('index', 1,  'indicator', 'PFA', 'de_number', COALESCE((e.pfa_count), 0), 'observation', NULL),
                jsonb_build_object('index', 2,  'indicator', 'Diarrhée sanglante', 'de_number', COALESCE((e.bloody_diarrhea_count), 0), 'observation', NULL),
                jsonb_build_object('index', 3,  'indicator', 'Fièvre Jaune', 'de_number', COALESCE((e.yellow_fever_count), 0), 'observation', NULL),
                jsonb_build_object('index', 4,  'indicator', 'Cholera', 'de_number', COALESCE((e.cholera_count), 0), 'observation', NULL),
                jsonb_build_object('index', 5,  'indicator', 'Tétanos Maternel et Néonatal', 'de_number', COALESCE((e.tetanus_count), 0), 'observation', NULL),
                jsonb_build_object('index', 6,  'indicator', 'Maladies virales(ebola, marburg, lassa)', 'de_number', COALESCE((e.viral_diseases_count), 0), 'observation', NULL),
                jsonb_build_object('index', 7,  'indicator', 'Méningite', 'de_number', COALESCE((e.meningitis_count), 0), 'observation', NULL),
                jsonb_build_object('index', 8,  'indicator', 'Décès maternels', 'de_number', COALESCE((e.maternal_deaths_count), 0), 'observation', NULL),
                jsonb_build_object('index', 9,  'indicator', 'Décès communautaires', 'de_number', COALESCE((e.community_deaths_count), 0), 'observation', NULL),
                jsonb_build_object('index', 10, 'indicator', 'Fievre grippale', 'de_number', COALESCE((e.influenza_fever_count), 0), 'observation', NULL)
            )
        ) AS diseases_alerts,
        
        jsonb_build_object('id', MAX(r.id), 'name', MAX(r.name), 'phone', MAX(r.phone)) AS reco,
        jsonb_build_object('id', MAX(c.id), 'name', MAX(c.name)) AS country,
        jsonb_build_object('id', MAX(g.id), 'name', MAX(g.name)) AS region,
        jsonb_build_object('id', MAX(p.id), 'name', MAX(p.name)) AS prefecture,
        jsonb_build_object('id', MAX(m.id), 'name', MAX(m.name)) AS commune,
        jsonb_build_object('id', MAX(h.id), 'name', MAX(h.name)) AS hospital,
        jsonb_build_object('id', MAX(d.id), 'name', MAX(d.name)) AS district_quartier,
        jsonb_build_object('id', MAX(v.id), 'name', MAX(v.name)) AS village_secteur

    FROM year_month_reco_grid_view a
    
        JOIN reco_view r ON r.id = a.reco_id

        LEFT JOIN aggregated_events e ON e.reco_id = a.reco_id AND e.month = a.month AND e.year = a.year
        LEFT JOIN aggregated_promotional prm ON prm.reco_id = a.reco_id AND prm.month = a.month AND prm.year = a.year
        LEFT JOIN aggregated_deaths ddv ON ddv.reco_id = a.reco_id AND ddv.month = a.month AND ddv.year = a.year
        LEFT JOIN aggregated_patients pat ON pat.reco_id = a.reco_id AND pat.month = a.month AND pat.year = a.year
        LEFT JOIN aggregated_patients_deaths pde ON pde.reco_id = a.reco_id AND pde.month = a.month AND pde.year = a.year
        LEFT JOIN aggregated_pcimne pci ON pci.reco_id = a.reco_id AND pci.month = a.month AND pci.year = a.year
        LEFT JOIN aggragate_adult adu ON adu.reco_id = a.reco_id AND adu.month = a.month AND adu.year = a.year
        LEFT JOIN aggregated_demography dem ON dem.reco_id = a.reco_id AND dem.month = a.month AND dem.year = a.year
        LEFT JOIN aggregated_vaccinations vac ON vac.reco_id = a.reco_id AND vac.month = a.month AND vac.year = a.year


        LEFT JOIN country_view c ON r.country_id = c.id 
        LEFT JOIN region_view g ON r.region_id = g.id 
        LEFT JOIN prefecture_view p ON r.prefecture_id = p.id 
        LEFT JOIN commune_view m ON r.commune_id = m.id 
        LEFT JOIN hospital_view h ON r.hospital_id = h.id 
        LEFT JOIN district_quartier_view d ON r.district_quartier_id = d.id 
        LEFT JOIN village_secteur_view v ON r.village_secteur_id = v.id 

    GROUP BY a.reco_id, a.month, a.year, pat.cover_month_population;
