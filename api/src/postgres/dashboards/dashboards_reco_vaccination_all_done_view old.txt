CREATE MATERIALIZED VIEW IF NOT EXISTS dashboards_reco_vaccination_all_done_view AS 
    SELECT * FROM (
        SELECT 
            CONCAT(a.month, '-', a.year, '-', a.reco_id) AS id,
            a.month,
            a.year,
            a.reco_id,
            (
                SELECT jsonb_agg(
                    jsonb_build_object(
                        'family_id', f.id,
                        'family_name', f.given_name,
                        'family_fullname', f.name,
                        'family_code', f.external_id,
                        'family_phone', (CASE WHEN f.householder_phone IS NOT NULL AND f.householder_phone <> ''
                                                THEN f.householder_phone
                                                WHEN f.householder_phone_other IS NOT NULL AND f.householder_phone_other <> ''
                                                THEN f.householder_phone_other
                                                ELSE NULL
                                        END),
                        'data', (
                                    SELECT jsonb_agg(
                                    jsonb_build_object(
                                        'family_id', f.id,
                                        'family_name', f.given_name,
                                        'family_fullname', f.name,
                                        'family_code', f.external_id,
                                        'child_id', v.child_id,
                                        'child_name', v.child_name,
                                        'child_code', v.child_code,
                                        'child_sex', v.child_sex,

                                        'reco_phone', (CASE WHEN v.child_phone IS NOT NULL AND v.child_phone <> '' AND v.child_phone = MAX(r.phone)
                                                                THEN v.child_phone
                                                            WHEN f.householder_phone IS NOT NULL AND f.householder_phone <> '' AND f.householder_phone = MAX(r.phone)
                                                                THEN f.householder_phone
                                                            WHEN f.householder_phone_other IS NOT NULL AND f.householder_phone_other <> '' AND f.householder_phone_other = MAX(r.phone)
                                                                THEN f.householder_phone_other
                                                            WHEN MAX(r.phone) IS NOT NULL AND MAX(r.phone)  <> ''
                                                                THEN MAX(r.phone)
                                                            ELSE NULL
                                                        END),

                                        'parent_phone', (CASE WHEN f.householder_phone IS NOT NULL AND f.householder_phone <> '' AND f.householder_phone <> MAX(r.phone)
                                                                THEN f.householder_phone
                                                                ELSE NULL
                                                        END),

                                        'neighbor_phone', (CASE WHEN f.householder_phone_other IS NOT NULL AND f.householder_phone_other <> '' AND f.householder_phone_other <> MAX(r.phone)
                                                                THEN f.householder_phone_other
                                                                ELSE NULL
                                                            END),

                                        'child_age_in_days', v.child_age_in_days,
                                        'child_age_in_months', v.child_age_in_months,
                                        'child_age_in_years', v.child_age_in_years,
                                        'child_age_str', v.child_age_str,

                                        'vaccine_BCG', v.vaccine_BCG,
                                        'vaccine_VPO_0', v.vaccine_VPO_0,
                                        'vaccine_PENTA_1', v.vaccine_PENTA_1,
                                        'vaccine_VPO_1', v.vaccine_VPO_1,
                                        'vaccine_PENTA_2', v.vaccine_PENTA_2,
                                        'vaccine_VPO_2', v.vaccine_VPO_2,
                                        'vaccine_PENTA_3', v.vaccine_PENTA_3,
                                        'vaccine_VPO_3', v.vaccine_VPO_3,
                                        'vaccine_VPI_1', v.vaccine_VPI_1,
                                        'vaccine_VAR_1', v.vaccine_VAR_1,
                                        'vaccine_VAA', v.vaccine_VAA,
                                        'vaccine_VPI_2', v.vaccine_VPI_2,
                                        'vaccine_MEN_A', v.vaccine_MEN_A,
                                        'vaccine_VAR_2', v.vaccine_VAR_2
                                    ) ORDER BY v.child_name
                                )
                                FROM (
                                    SELECT DISTINCT ON (ppt.id) 
                                        ppt.id AS child_id,
                                        ppt.name AS child_name, 
                                        ppt.external_id AS child_code, 
                                        ppt.sex AS child_sex, 
                                        (CASE 
                                            WHEN ppt.phone IS NOT NULL AND ppt.phone <> ''
                                                THEN ppt.phone
                                            WHEN ppt.phone_other IS NOT NULL AND ppt.phone_other <> ''
                                                THEN ppt.phone_other
                                            ELSE NULL
                                        END) AS child_phone,

                                        ppt.birth_date AS birth_date,

                                        calculate_age_in('days'::TEXT, ppt.birth_date::DATE) AS child_age_in_days,
                                        calculate_age_in('months'::TEXT, ppt.birth_date::DATE) AS child_age_in_months,
                                        calculate_age_in('years'::TEXT, ppt.birth_date::DATE) AS child_age_in_years,
                                                                                
                                        age_with_full_label(NULL, calculate_age_in('days'::TEXT, ppt.birth_date::DATE)::BIGINT) AS child_age_str,

                                        ppt.family_id,
                                        vd.reco_id,
                                        
                                        vd.vaccine_BCG,
                                        vd.vaccine_VPO_0,
                                        vd.vaccine_PENTA_1,
                                        vd.vaccine_VPO_1,
                                        vd.vaccine_PENTA_2,
                                        vd.vaccine_VPO_2,
                                        vd.vaccine_PENTA_3,
                                        vd.vaccine_VPO_3,
                                        vd.vaccine_VPI_1,
                                        vd.vaccine_VAR_1,
                                        vd.vaccine_VAA,
                                        vd.vaccine_VPI_2,
                                        vd.vaccine_MEN_A,
                                        vd.vaccine_VAR_2,

                                        vd.has_all_vaccine_done,
                                        vd.is_birth_vaccine_ok,
                                        vd.is_six_weeks_vaccine_ok,
                                        vd.is_ten_weeks_vaccine_ok,
                                        vd.is_forteen_weeks_vaccine_ok,
                                        vd.is_nine_months_vaccine_ok,
                                        vd.is_fifty_months_vaccine_ok

                                    FROM patient_view ppt 
                                    
                                    INNER JOIN (
                                        SELECT 
                                            patient_id, 
                                            MAX(reported_date_timestamp) AS last_vaccination_date
                                        FROM 
                                            vaccination_data_view
                                        WHERE
                                            reported_date <= (DATE_TRUNC('month', TO_DATE(a.year || '-' || a.month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')
                                        GROUP BY 
                                            patient_id
                                    ) AS max_vd ON ppt.id = max_vd.patient_id

                                    INNER JOIN 
                                            vaccination_data_view vd ON ppt.id = vd.patient_id 
                                            AND vd.reported_date_timestamp = max_vd.last_vaccination_date 
                                            AND vd.reported_date <= (DATE_TRUNC('month', TO_DATE(a.year || '-' || a.month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')

                                    WHERE 
                                        ppt.birth_date IS NOT NULL 
                                        AND ppt.death_date IS NULL
                                        AND calculate_age_in('days'::TEXT, ppt.birth_date::DATE) > 0 
                                        AND calculate_age_in('months'::TEXT, ppt.birth_date::DATE) < 60 
                                        AND vd.vaccine_BCG IS TRUE
                                        AND vd.vaccine_VPO_0 IS TRUE
                                        AND vd.vaccine_PENTA_1 IS TRUE
                                        AND vd.vaccine_VPO_1 IS TRUE
                                        AND vd.vaccine_PENTA_2 IS TRUE
                                        AND vd.vaccine_VPO_2 IS TRUE
                                        AND vd.vaccine_PENTA_3 IS TRUE
                                        AND vd.vaccine_VPO_3 IS TRUE
                                        AND vd.vaccine_VPI_1 IS TRUE
                                        AND vd.vaccine_VAR_1 IS TRUE
                                        AND vd.vaccine_VAA IS TRUE
                                        AND vd.vaccine_VPI_2 IS TRUE
                                        AND vd.vaccine_MEN_A IS TRUE
                                        AND vd.vaccine_VAR_2 IS TRUE
                                ) AS v 
                                WHERE 
                                        v.family_id = f.id
                                    AND v.child_id IS NOT NULL
                                    AND v.reco_id = a.reco_id 
                                    AND calculate_age_in('days'::TEXT, v.birth_date::DATE) > 0 
                                    AND calculate_age_in('months'::TEXT, v.birth_date::DATE) < 60 
                                    AND v.vaccine_BCG IS TRUE
                                    AND v.vaccine_VPO_0 IS TRUE
                                    AND v.vaccine_PENTA_1 IS TRUE
                                    AND v.vaccine_VPO_1 IS TRUE
                                    AND v.vaccine_PENTA_2 IS TRUE
                                    AND v.vaccine_VPO_2 IS TRUE
                                    AND v.vaccine_PENTA_3 IS TRUE
                                    AND v.vaccine_VPO_3 IS TRUE
                                    AND v.vaccine_VPI_1 IS TRUE
                                    AND v.vaccine_VAR_1 IS TRUE
                                    AND v.vaccine_VAA IS TRUE
                                    AND v.vaccine_VPI_2 IS TRUE
                                    AND v.vaccine_MEN_A IS TRUE
                                    AND v.vaccine_VAR_2 IS TRUE
                            )
                    ) ORDER BY f.given_name
                )
                FROM (
                    SELECT DISTINCT ON (fy.id, cpt.id) fy.id, fy.given_name, fy.name, fy.external_id , fy.reco_id, cpt.phone AS householder_phone, cpt.phone_other AS householder_phone_other
                    FROM family_view fy
                    INNER JOIN patient_view pt ON fy.id = pt.family_id  AND pt.reco_id = a.reco_id 

                    LEFT JOIN patient_view cpt ON fy.householder_id = cpt.id 

                    INNER JOIN (
                        SELECT 
                            patient_id, 
                            MAX(reported_date_timestamp) AS last_vaccination_date
                        FROM 
                            vaccination_data_view
                        WHERE
                            reported_date <= (DATE_TRUNC('month', TO_DATE(a.year || '-' || a.month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')
                        GROUP BY 
                            patient_id
                    ) AS max_vdd ON pt.id = max_vdd.patient_id

                    INNER JOIN 
                            vaccination_data_view vdd ON pt.id = vdd.patient_id 
                            AND vdd.reported_date_timestamp = max_vdd.last_vaccination_date 
                            AND vdd.reported_date <= (DATE_TRUNC('month', TO_DATE(a.year || '-' || a.month || '-01', 'YYYY-MM-DD')) + INTERVAL '1 month' - INTERVAL '1 microsecond')

                    WHERE 
                        fy.reco_id = a.reco_id 
                        AND pt.birth_date IS NOT NULL 
                        AND pt.death_date IS NULL
                        AND calculate_age_in('days'::TEXT, pt.birth_date::DATE) > 0 
                        AND calculate_age_in('months'::TEXT,  pt.birth_date::DATE) < 60
                        AND vdd.patient_id IS NOT NULL
                        AND vdd.vaccine_BCG IS TRUE
                        AND vdd.vaccine_VPO_0 IS TRUE
                        AND vdd.vaccine_PENTA_1 IS TRUE
                        AND vdd.vaccine_VPO_1 IS TRUE
                        AND vdd.vaccine_PENTA_2 IS TRUE
                        AND vdd.vaccine_VPO_2 IS TRUE
                        AND vdd.vaccine_PENTA_3 IS TRUE
                        AND vdd.vaccine_VPO_3 IS TRUE
                        AND vdd.vaccine_VPI_1 IS TRUE
                        AND vdd.vaccine_VAR_1 IS TRUE
                        AND vdd.vaccine_VAA IS TRUE
                        AND vdd.vaccine_VPI_2 IS TRUE
                        AND vdd.vaccine_MEN_A IS TRUE
                        AND vdd.vaccine_VAR_2 IS TRUE
                ) AS f
            ) AS children_vaccines,
        
                jsonb_build_object('id', MAX(r.id), 'name', MAX(r.name), 'phone', MAX(r.phone)) AS reco,
                jsonb_build_object('id', MAX(c.id), 'name', MAX(c.name)) AS country,
                jsonb_build_object('id', MAX(g.id), 'name', MAX(g.name)) AS region,
                jsonb_build_object('id', MAX(p.id), 'name', MAX(p.name)) AS prefecture,
                jsonb_build_object('id', MAX(m.id), 'name', MAX(m.name)) AS commune,
                jsonb_build_object('id', MAX(h.id), 'name', MAX(h.name)) AS hospital,
                jsonb_build_object('id', MAX(d.id), 'name', MAX(d.name)) AS district_quartier,
                jsonb_build_object('id', MAX(v.id), 'name', MAX(v.name)) AS village_secteur

            FROM year_month_reco_grid_view a
            
                JOIN reco_view r ON r.id = a.reco_id
                LEFT JOIN country_view c ON r.country_id = c.id 
                LEFT JOIN region_view g ON r.region_id = g.id 
                LEFT JOIN prefecture_view p ON r.prefecture_id = p.id 
                LEFT JOIN commune_view m ON r.commune_id = m.id 
                LEFT JOIN hospital_view h ON r.hospital_id = h.id 
                LEFT JOIN district_quartier_view d ON r.district_quartier_id = d.id 
                LEFT JOIN village_secteur_view v ON r.village_secteur_id = v.id 

            GROUP BY a.reco_id, a.month, a.year
    )

    WHERE children_vaccines IS NOT NULL 

    AND jsonb_typeof(children_vaccines) = 'array'

    AND EXISTS (
        SELECT 1 
        FROM jsonb_array_elements(children_vaccines) AS family 
        WHERE 
            family ? 'data' 
            AND family->>'data' IS NOT NULL
            AND jsonb_typeof(family->'data') = 'array'
            AND jsonb_array_length(family->'data') > 0
            AND EXISTS (
                SELECT 1 
                FROM jsonb_array_elements(family->'data') AS child 
                WHERE 
                    jsonb_typeof(child) = 'object'
                    AND COALESCE(child->>'child_name', '') <> ''
            )
    );
