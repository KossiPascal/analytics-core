CREATE MATERIALIZED VIEW IF NOT EXISTS dashboards_reco_performance_view AS
    WITH colors AS (
        SELECT generate_random_colors (COALESCE((SELECT COUNT(id)FROM reco_view), 1) * 30) AS color
    )

    SELECT 
            CONCAT(a.month, '-', a.year, '-', a.reco_id) AS id,
            a.month AS month,
            a.year AS year,
            a.reco_id AS reco_id,

            (MAX(f.families_cover) FILTER (WHERE f.id IS NOT NULL)) AS household_count,
            (MAX(pt.patients_cover) FILTER (WHERE pt.id IS NOT NULL)) AS patient_count,
            (MAX(pc.newborn_less_02_months) FILTER (WHERE pc.id IS NOT NULL)) AS newborn_less_02_months_count,
            (MAX(pc.child_02_to_60_months) FILTER (WHERE pc.id IS NOT NULL)) AS child_02_to_60_months_count,
            (MAX(pc.child_05_to_14_years) FILTER (WHERE pc.id IS NOT NULL)) AS child_05_to_14_years_count,
            (MAX(pc.adult_over_14_years) FILTER (WHERE pc.id IS NOT NULL)) AS adult_over_14_years_count,
            -- (COUNT(dcf.*) FILTER (WHERE dcf.id IS NOT NULL AND dcf.consultation_followup = 'consultation')) AS consultation_count,
            -- (COUNT(dcf.*) FILTER (WHERE dcf.id IS NOT NULL AND dcf.consultation_followup <> 'consultation')) AS followup_count,
            -- (COUNT(daa.*) FILTER (WHERE daa.id IS NOT NULL)) AS all_actions_count,

            -- jsonb_build_object(
            --     'title', 'TOUTES LES ACTIONS DU RECO',
            --     'type', 'line',
            --     'absisseLabels', ARRAY['ACTIONS A DOMICILE'],
            --     'datasets', jsonb_build_array(
            --         jsonb_build_object(
            --             'label', a.reco_id,
            --             'backgroundColor', (SELECT color FROM colors LIMIT 1)[1],
            --             'borderColor', (SELECT color FROM colors LIMIT 1)[1],
            --             'data', ARRAY[
            --                 (COUNT(daa.*) FILTER (WHERE daa.id IS NOT NULL))
            --             ]
            --         )
            --     )
            -- ) AS linechart,

            -- jsonb_build_object(
            --     'title', 'TENDANCES DES ACTIVITE DU RECO',
            --     'type', 'bar',
            --     'absisseLabels', ARRAY['Adult', 'PF', 'Nouveau Né', 'Pcime', 'Enceinte', 'Accouchement', 'Suivi Référence', 'Décès', 'Evenements', 'Activités Promotionnelles'],
            --     'datasets', jsonb_build_array(
            --         jsonb_build_object(
            --             'label', a.reco_id,
            --             'backgroundColor', (SELECT color FROM colors LIMIT 1)[1],
            --             'borderColor', (SELECT color FROM colors LIMIT 1)[1],
            --             'data', ARRAY[
            --                 (MAX(dac.adult_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.family_planning_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.newborn_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.pcimne_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.pregnant_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.delivery_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.referal_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.death_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.events_data_count) FILTER (WHERE dac.id IS NOT NULL)),
            --                 (MAX(dac.promotional_data_count) FILTER (WHERE dac.id IS NOT NULL))
            --             ]
            --         )
            --     )
            -- ) AS barchart,
            
            jsonb_build_object('id', MAX(r.id), 'name', MAX(r.name), 'phone', MAX(r.phone)) AS reco,
            jsonb_build_object('id', MAX(c.id), 'name', MAX(c.name)) AS country,
            jsonb_build_object('id', MAX(g.id), 'name', MAX(g.name)) AS region,
            jsonb_build_object('id', MAX(p.id), 'name', MAX(p.name)) AS prefecture,
            jsonb_build_object('id', MAX(m.id), 'name', MAX(m.name)) AS commune,
            jsonb_build_object('id', MAX(h.id), 'name', MAX(h.name)) AS hospital,
            jsonb_build_object('id', MAX(d.id), 'name', MAX(d.name)) AS district_quartier,
            jsonb_build_object('id', MAX(v.id), 'name', MAX(v.name)) AS village_secteur

        FROM year_month_reco_grid_view a
        
            JOIN reco_view r ON r.id = a.reco_id

            LEFT JOIN report_family_view f ON f.reco_id = a.reco_id AND f.month = a.month AND f.year = a.year
            LEFT JOIN report_patient_view pt ON pt.reco_id = a.reco_id AND pt.month = a.month AND pt.year = a.year
            LEFT JOIN report_patient_count_view pc ON pc.reco_id = a.reco_id AND pc.month = a.month AND pc.year = a.year

            -- LEFT JOIN dash_consultation_followup_view dcf ON dcf.month = a.month AND dcf.year = a.year AND dcf.reco_id = a.reco_id
            -- LEFT JOIN dash_all_actions_view daa ON daa.month = a.month AND daa.year = a.year AND daa.reco_id = a.reco_id
            -- LEFT JOIN dashboards_actions_count_view dac ON dac.month = a.month AND dac.year = a.year AND dac.reco_id = a.reco_id

            

            LEFT JOIN country_view c ON c.id = a.country_id 
            LEFT JOIN region_view g ON g.id = a.region_id 
            LEFT JOIN prefecture_view p ON p.id = a.prefecture_id 
            LEFT JOIN commune_view m ON m.id = a.commune_id 
            LEFT JOIN hospital_view h ON h.id = a.hospital_id 
            LEFT JOIN district_quartier_view d ON d.id = a.district_quartier_id 
            LEFT JOIN village_secteur_view v ON v.id = a.village_secteur_id 

        GROUP BY a.reco_id, a.month, a.year;